#!/bin/bash

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

set -e

# exit if roomsdb already exists
MARIADB_ROOT_PASSWORD=$(grep '^MARIADB_ROOT_PASSWORD=' ./passwords.env) && export $MARIADB_ROOT_PASSWORD
mysql -uroot -p"${MARIADB_ROOT_PASSWORD}" -e "SHOW DATABASES" | grep -q '^roomsdb$' && exit 0

# Add hotel db, tables and permissions
cat - > ./restore/99permissions.sh <<'EOF'
#!/bin/bash
# Create database
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/00_roomsdb-schema-create.sql
# Create tables
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.alarmcalls-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.alarms_history-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.alarms-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.codes-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.extra_history-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.extras-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.groups_rooms-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.history-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.options-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.rates-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.room_groups-schema.sql
/usr/bin/mysql -uroot -p${MARIADB_ROOT_PASSWORD} < docker-entrypoint-initdb.d/40_roomsdb.rooms-schema.sql
# Add permissions
/usr/bin/mysql -uroot -p"${MARIADB_ROOT_PASSWORD}" -e "GRANT ALL on roomsdb.* to '${AMPDBUSER}'@'127.0.0.1' identified by '${AMPDBPASS}'"
EOF

# Add script that kill the temporary server
cat - > ./restore/zz_restore.sh <<EOF
#!/bin/bash
set -e
mysql --version
set -- true
docker_temp_server_stop
exit 0
EOF

# launch a temporary server for restore the migration dumps
podman run \
    --rm \
    --interactive \
    --name=mariadb_update \
    --network=none \
    --volume=mariadb-data:/var/lib/mysql:Z \
    --env-file=./passwords.env \
    --env=NETHVOICE_MARIADB_PORT \
    --env=AMPDBUSER \
    --env=MARIADB_AUTO_UPGRADE=1 \
    "${NETHVOICE_MARIADB_IMAGE}"
