#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import agent
import os


# Set the proxy IP and port if not already set and the proxy is installed
if os.getenv('PROXY_IP') is None or os.getenv('PROXY_PORT') is None:
    proxy_id = agent.resolve_agent_id('nethvoice-proxy@node')
    if proxy_id is not None:
        ksrv = agent.list_service_providers(agent.redis_connect(use_replica=True), "sip", "tcp", {"module_id": proxy_id.removeprefix("module/")})
        agent.set_env("PROXY_IP", ksrv[0]["host"])
        agent.set_env("PROXY_PORT", ksrv[0]["port"])

# test if the passwords.env is present
if not os.path.exists("passwords.env"):
    # if not present, create it
    passwords = {
        "MARIADB_ROOT_PASSWORD": os.environ['MARIADB_ROOT_PASSWORD'],
        "AMPDBPASS": os.environ['AMPDBPASS'],
        "AMPMGRPASS": os.environ['AMPMGRPASS'],
        "NETHCTI_AMI_PASSWORD": os.environ['NETHCTI_AMI_PASSWORD'],
        "CDRDBPASS": os.environ['CDRDBPASS'],
        "NETHCTI_DB_PASSWORD": os.environ['NETHCTI_DB_PASSWORD'],
        "TANCREDI_STATIC_TOKEN": os.environ['TANCREDI_STATIC_TOKEN'],
        "NETHVOICESECRETKEY": os.environ['NETHVOICESECRETKEY'],
        "JANUS_ADMIN_SECRET": os.environ['JANUS_ADMIN_SECRET'],
        "PHONEBOOK_DB_PASS": os.environ['PHONEBOOK_DB_PASS'],
        "PHONEBOOK_LDAP_PASS": os.environ['PHONEBOOK_LDAP_PASS'],
        "REPORTS_PASSWORD": os.environ['REPORTS_PASSWORD'],
        "REPORTS_API_KEY": os.environ['REPORTS_API_KEY'],
        "REPORTS_SECRET": os.environ['REPORTS_SECRET'],
        "NETHVOICE_USER_PORTAL_PASSWORD": os.getenv('NETHVOICE_USER_PORTAL_PASSWORD', ''),
        "SUBSCRIPTION_SECRET": os.getenv('SUBSCRIPTION_SECRET', ''),
        "NETHVOICE_LDAP_PASS": os.environ['NETHVOICE_LDAP_PASS'],
    }
    agent.write_envfile("passwords.env", passwords)

    # now we can remove from environment
    agent.unset_env('MARIADB_ROOT_PASSWORD')
    agent.unset_env('AMPDBPASS')
    agent.unset_env('AMPMGRPASS')
    agent.unset_env('NETHCTI_AMI_PASSWORD')
    agent.unset_env('CDRDBPASS')
    agent.unset_env('NETHCTI_DB_PASSWORD')
    agent.unset_env('TANCREDI_STATIC_TOKEN')
    agent.unset_env('NETHVOICESECRETKEY')
    agent.unset_env('JANUS_ADMIN_SECRET')
    agent.unset_env('PHONEBOOK_DB_PASS')
    agent.unset_env('PHONEBOOK_LDAP_PASS')
    agent.unset_env('REPORTS_PASSWORD')
    agent.unset_env('REPORTS_API_KEY')
    agent.unset_env('REPORTS_SECRET')
    agent.unset_env('NETHVOICE_USER_PORTAL_PASSWORD')
    agent.unset_env('SUBSCRIPTION_SECRET')
    agent.unset_env('NETHVOICE_LDAP_PASS')

# Set the brand site and docs static URLs
agent.set_env('BRAND_SITE', 'https://www.nethesis.it/soluzioni/nethvoice')
agent.set_env('BRAND_DOCS', 'https://docs.nethserver.org/projects/ns8/it/latest/nethvoice.html')

if os.getenv('ICEENFORCE') is None:
    agent.set_env('ICEENFORCE', 'none')

if os.getenv('NETHCTI_PRIVACY_NUMBERS') is None:
    agent.set_env('NETHCTI_PRIVACY_NUMBERS', 'xxx')
