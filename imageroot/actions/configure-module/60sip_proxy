#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys

import agent
import agent.tasks

# Find default proxy  instance for current node
proxy_id = agent.resolve_agent_id('nethvoice-proxy@node')
if proxy_id is None:
    sys.exit(2)

# Get proxy srv records
ksrv = agent.list_service_providers(agent.redis_connect(use_replica=True), "sip", "tcp", {"module_id": proxy_id.removeprefix("module/")})

# Set environment variables for nethvoice-proxy
agent.set_env("NETHVOICE_PROXY_FQDN", ksrv[0]["fqdn"])
agent.set_env("PROXY_IP", ksrv[0]["host"])
agent.set_env("PROXY_PORT", ksrv[0]["port"])

# Configure nethvoice-proxy to route SIP traffic for Nethvoice
response = agent.tasks.run(
    agent_id=proxy_id,
    action='add-route',
    data={
        'domain': os.environ["NETHVOICE_HOST"],
        'address': [{"uri":"sip:"+ ksrv[0]["host"] +":"+os.environ["ASTERISK_SIP_PORT"],"description":os.environ["MODULE_ID"]}],
    },
)

# Check if proxy configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)
